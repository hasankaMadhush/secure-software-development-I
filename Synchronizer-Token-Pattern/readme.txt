Synchronizer Token Pattern

Any state changing operation requires a secure random token (e.g., CSRF token) to prevent CSRF attacks. A CSRF token should be unique per user session, 
large random value, and also generated by a cryptographically secure random number generator. The CSRF token is added as a hidden field for forms 
headers/parameters for AJAX calls, and within the URL if the state changing operation occurs via a GET. See "Disclosure of Token in URL" section below. 
The server rejects the requested action if the CSRF token fails validation.

In order to facilitate a "transparent but visible" CSRF solution, developers are encouraged to adopt a pattern similar to Synchronizer Token Pattern 
(The original intention of this synchronizer token pattern was to detect duplicate submissions in forms). The synchronizer token pattern requires the
generation of random "challenge" tokens that are associated with the user's current session. These challenge tokens are then inserted within the HTML
forms and calls associated with sensitive server-side operations. It is the responsibility of the server application to verify the existence and 
correctness of this token. By including a challenge token with each request, the developer has a strong control to verify that the user actually
intended to submit the desired requests. Inclusion of a required security token in HTTP requests associated with sensitive business functions helps 
mitigate CSRF attacks as successful exploitation assumes the attacker knows the randomly generated token for the target victim's session. 
